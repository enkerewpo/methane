circuit MidiProc :
  module UART_rx :
    input clock : Clock
    input reset : Reset
    output io : { flip i_serial_data : UInt<1>, o_rx_done : UInt<1>, o_data : UInt<8>}

    reg clkCnterReg : UInt<10>, clock with :
      reset => (reset, UInt<10>("h0")) @[UART_rx.scala 25:28]
    reg bitCnterReg : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[UART_rx.scala 26:28]
    wire _outDataReg_WIRE : UInt<1>[8] @[UART_rx.scala 28:35]
    _outDataReg_WIRE[0] <= UInt<1>("h0") @[UART_rx.scala 28:35]
    _outDataReg_WIRE[1] <= UInt<1>("h0") @[UART_rx.scala 28:35]
    _outDataReg_WIRE[2] <= UInt<1>("h0") @[UART_rx.scala 28:35]
    _outDataReg_WIRE[3] <= UInt<1>("h0") @[UART_rx.scala 28:35]
    _outDataReg_WIRE[4] <= UInt<1>("h0") @[UART_rx.scala 28:35]
    _outDataReg_WIRE[5] <= UInt<1>("h0") @[UART_rx.scala 28:35]
    _outDataReg_WIRE[6] <= UInt<1>("h0") @[UART_rx.scala 28:35]
    _outDataReg_WIRE[7] <= UInt<1>("h0") @[UART_rx.scala 28:35]
    reg outDataReg : UInt<1>[8], clock with :
      reset => (reset, _outDataReg_WIRE) @[UART_rx.scala 28:27]
    reg outRxDoneReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[UART_rx.scala 29:29]
    reg stateReg : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[UART_rx.scala 30:25]
    reg serialDataReg_REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), serialDataReg_REG) @[UART_rx.scala 33:38]
    serialDataReg_REG <= io.i_serial_data @[UART_rx.scala 33:38]
    reg serialDataReg : UInt<1>, clock with :
      reset => (UInt<1>("h0"), serialDataReg) @[UART_rx.scala 33:30]
    serialDataReg <= serialDataReg_REG @[UART_rx.scala 33:30]
    node io_o_data_lo_lo = cat(outDataReg[1], outDataReg[0]) @[Cat.scala 33:92]
    node io_o_data_lo_hi = cat(outDataReg[3], outDataReg[2]) @[Cat.scala 33:92]
    node io_o_data_lo = cat(io_o_data_lo_hi, io_o_data_lo_lo) @[Cat.scala 33:92]
    node io_o_data_hi_lo = cat(outDataReg[5], outDataReg[4]) @[Cat.scala 33:92]
    node io_o_data_hi_hi = cat(outDataReg[7], outDataReg[6]) @[Cat.scala 33:92]
    node io_o_data_hi = cat(io_o_data_hi_hi, io_o_data_hi_lo) @[Cat.scala 33:92]
    node _io_o_data_T = cat(io_o_data_hi, io_o_data_lo) @[Cat.scala 33:92]
    io.o_data <= _io_o_data_T @[UART_rx.scala 35:13]
    io.o_rx_done <= outRxDoneReg @[UART_rx.scala 36:16]
    node _T = eq(UInt<2>("h0"), stateReg) @[UART_rx.scala 38:21]
    when _T : @[UART_rx.scala 38:21]
      outRxDoneReg <= UInt<1>("h0") @[UART_rx.scala 40:20]
      clkCnterReg <= UInt<10>("h0") @[UART_rx.scala 42:19]
      bitCnterReg <= UInt<4>("h0") @[UART_rx.scala 43:19]
      node _T_1 = eq(serialDataReg, UInt<1>("h0")) @[UART_rx.scala 45:27]
      when _T_1 : @[UART_rx.scala 45:40]
        stateReg <= UInt<2>("h1") @[UART_rx.scala 46:18]
      else :
        stateReg <= UInt<2>("h0") @[UART_rx.scala 48:18]
    else :
      node _T_2 = eq(UInt<2>("h1"), stateReg) @[UART_rx.scala 38:21]
      when _T_2 : @[UART_rx.scala 38:21]
        node _T_3 = lt(clkCnterReg, UInt<8>("ha0")) @[UART_rx.scala 52:25]
        when _T_3 : @[UART_rx.scala 52:47]
          node _clkCnterReg_T = add(clkCnterReg, UInt<1>("h1")) @[UART_rx.scala 53:36]
          node _clkCnterReg_T_1 = tail(_clkCnterReg_T, 1) @[UART_rx.scala 53:36]
          clkCnterReg <= _clkCnterReg_T_1 @[UART_rx.scala 53:21]
          stateReg <= UInt<2>("h1") @[UART_rx.scala 54:18]
        else :
          clkCnterReg <= UInt<10>("h0") @[UART_rx.scala 57:21]
          node _T_4 = eq(serialDataReg, UInt<1>("h0")) @[UART_rx.scala 58:29]
          when _T_4 : @[UART_rx.scala 58:42]
            stateReg <= UInt<2>("h2") @[UART_rx.scala 59:20]
          else :
            stateReg <= UInt<2>("h0") @[UART_rx.scala 62:20]
      else :
        node _T_5 = eq(UInt<2>("h2"), stateReg) @[UART_rx.scala 38:21]
        when _T_5 : @[UART_rx.scala 38:21]
          node _T_6 = lt(clkCnterReg, UInt<9>("h140")) @[UART_rx.scala 67:25]
          when _T_6 : @[UART_rx.scala 67:41]
            node _clkCnterReg_T_2 = add(clkCnterReg, UInt<1>("h1")) @[UART_rx.scala 68:36]
            node _clkCnterReg_T_3 = tail(_clkCnterReg_T_2, 1) @[UART_rx.scala 68:36]
            clkCnterReg <= _clkCnterReg_T_3 @[UART_rx.scala 68:21]
          else :
            clkCnterReg <= UInt<10>("h0") @[UART_rx.scala 70:21]
            node _T_7 = bits(bitCnterReg, 2, 0)
            outDataReg[_T_7] <= serialDataReg @[UART_rx.scala 73:33]
            node _T_8 = lt(bitCnterReg, UInt<4>("h8")) @[UART_rx.scala 74:27]
            when _T_8 : @[UART_rx.scala 74:44]
              node _bitCnterReg_T = add(bitCnterReg, UInt<1>("h1")) @[UART_rx.scala 75:38]
              node _bitCnterReg_T_1 = tail(_bitCnterReg_T, 1) @[UART_rx.scala 75:38]
              bitCnterReg <= _bitCnterReg_T_1 @[UART_rx.scala 75:23]
            else :
              bitCnterReg <= UInt<4>("h0") @[UART_rx.scala 77:23]
          node _T_9 = eq(bitCnterReg, UInt<4>("h8")) @[UART_rx.scala 80:25]
          when _T_9 : @[UART_rx.scala 80:44]
            stateReg <= UInt<2>("h3") @[UART_rx.scala 81:18]
          else :
            stateReg <= UInt<2>("h2") @[UART_rx.scala 83:18]
        else :
          node _T_10 = eq(UInt<2>("h3"), stateReg) @[UART_rx.scala 38:21]
          when _T_10 : @[UART_rx.scala 38:21]
            node _T_11 = lt(clkCnterReg, UInt<9>("h140")) @[UART_rx.scala 87:25]
            when _T_11 : @[UART_rx.scala 87:41]
              node _clkCnterReg_T_4 = add(clkCnterReg, UInt<1>("h1")) @[UART_rx.scala 88:36]
              node _clkCnterReg_T_5 = tail(_clkCnterReg_T_4, 1) @[UART_rx.scala 88:36]
              clkCnterReg <= _clkCnterReg_T_5 @[UART_rx.scala 88:21]
              stateReg <= UInt<2>("h3") @[UART_rx.scala 89:18]
            else :
              clkCnterReg <= UInt<10>("h0") @[UART_rx.scala 91:21]
              outRxDoneReg <= UInt<1>("h1") @[UART_rx.scala 93:22]
              stateReg <= UInt<2>("h0") @[UART_rx.scala 94:18]

  module MidiProc :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip en : UInt<1>, flip midi_in : UInt<1>, freq : UInt<32>}

    inst uart_r of UART_rx @[MidiProc.scala 21:24]
    uart_r.clock <= clock
    uart_r.reset <= reset
    wire byte_ok : UInt<1> @[MidiProc.scala 26:23]
    reg byte_r : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[MidiProc.scala 27:25]
    uart_r.io.i_serial_data <= io.midi_in @[MidiProc.scala 29:29]
    byte_ok <= uart_r.io.o_rx_done @[MidiProc.scala 30:13]
    reg state : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[MidiProc.scala 33:24]
    wire sbyte_type : UInt<4> @[MidiProc.scala 35:26]
    wire sbyte_channel : UInt<4> @[MidiProc.scala 36:29]
    node _sbyte_type_T = bits(byte_r, 7, 4) @[MidiProc.scala 37:25]
    sbyte_type <= _sbyte_type_T @[MidiProc.scala 37:16]
    node _sbyte_channel_T = bits(byte_r, 3, 0) @[MidiProc.scala 38:28]
    sbyte_channel <= _sbyte_channel_T @[MidiProc.scala 38:19]
    reg sbyte : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[MidiProc.scala 40:24]
    reg note : UInt<7>, clock with :
      reset => (reset, UInt<7>("h0")) @[MidiProc.scala 41:23]
    reg velocity : UInt<7>, clock with :
      reset => (reset, UInt<7>("h0")) @[MidiProc.scala 42:27]
    wire freqTable : UInt<32>[128] @[MidiProc.scala 44:28]
    freqTable[0] <= UInt<32>("h332") @[MidiProc.scala 44:28]
    freqTable[1] <= UInt<32>("h362") @[MidiProc.scala 44:28]
    freqTable[2] <= UInt<32>("h396") @[MidiProc.scala 44:28]
    freqTable[3] <= UInt<32>("h3cc") @[MidiProc.scala 44:28]
    freqTable[4] <= UInt<32>("h406") @[MidiProc.scala 44:28]
    freqTable[5] <= UInt<32>("h443") @[MidiProc.scala 44:28]
    freqTable[6] <= UInt<32>("h484") @[MidiProc.scala 44:28]
    freqTable[7] <= UInt<32>("h4c9") @[MidiProc.scala 44:28]
    freqTable[8] <= UInt<32>("h512") @[MidiProc.scala 44:28]
    freqTable[9] <= UInt<32>("h55f") @[MidiProc.scala 44:28]
    freqTable[10] <= UInt<32>("h5b1") @[MidiProc.scala 44:28]
    freqTable[11] <= UInt<32>("h607") @[MidiProc.scala 44:28]
    freqTable[12] <= UInt<32>("h663") @[MidiProc.scala 44:28]
    freqTable[13] <= UInt<32>("h6c4") @[MidiProc.scala 44:28]
    freqTable[14] <= UInt<32>("h72b") @[MidiProc.scala 44:28]
    freqTable[15] <= UInt<32>("h799") @[MidiProc.scala 44:28]
    freqTable[16] <= UInt<32>("h80c") @[MidiProc.scala 44:28]
    freqTable[17] <= UInt<32>("h887") @[MidiProc.scala 44:28]
    freqTable[18] <= UInt<32>("h908") @[MidiProc.scala 44:28]
    freqTable[19] <= UInt<32>("h992") @[MidiProc.scala 44:28]
    freqTable[20] <= UInt<32>("ha24") @[MidiProc.scala 44:28]
    freqTable[21] <= UInt<32>("habe") @[MidiProc.scala 44:28]
    freqTable[22] <= UInt<32>("hb62") @[MidiProc.scala 44:28]
    freqTable[23] <= UInt<32>("hc0f") @[MidiProc.scala 44:28]
    freqTable[24] <= UInt<32>("hcc6") @[MidiProc.scala 44:28]
    freqTable[25] <= UInt<32>("hd89") @[MidiProc.scala 44:28]
    freqTable[26] <= UInt<32>("he57") @[MidiProc.scala 44:28]
    freqTable[27] <= UInt<32>("hf31") @[MidiProc.scala 44:28]
    freqTable[28] <= UInt<32>("h1018") @[MidiProc.scala 44:28]
    freqTable[29] <= UInt<32>("h110d") @[MidiProc.scala 44:28]
    freqTable[30] <= UInt<32>("h1211") @[MidiProc.scala 44:28]
    freqTable[31] <= UInt<32>("h1324") @[MidiProc.scala 44:28]
    freqTable[32] <= UInt<32>("h1447") @[MidiProc.scala 44:28]
    freqTable[33] <= UInt<32>("h157c") @[MidiProc.scala 44:28]
    freqTable[34] <= UInt<32>("h16c3") @[MidiProc.scala 44:28]
    freqTable[35] <= UInt<32>("h181e") @[MidiProc.scala 44:28]
    freqTable[36] <= UInt<32>("h198d") @[MidiProc.scala 44:28]
    freqTable[37] <= UInt<32>("h1b12") @[MidiProc.scala 44:28]
    freqTable[38] <= UInt<32>("h1cae") @[MidiProc.scala 44:28]
    freqTable[39] <= UInt<32>("h1e62") @[MidiProc.scala 44:28]
    freqTable[40] <= UInt<32>("h2031") @[MidiProc.scala 44:28]
    freqTable[41] <= UInt<32>("h221b") @[MidiProc.scala 44:28]
    freqTable[42] <= UInt<32>("h2422") @[MidiProc.scala 44:28]
    freqTable[43] <= UInt<32>("h2648") @[MidiProc.scala 44:28]
    freqTable[44] <= UInt<32>("h288f") @[MidiProc.scala 44:28]
    freqTable[45] <= UInt<32>("h2af8") @[MidiProc.scala 44:28]
    freqTable[46] <= UInt<32>("h2d86") @[MidiProc.scala 44:28]
    freqTable[47] <= UInt<32>("h303b") @[MidiProc.scala 44:28]
    freqTable[48] <= UInt<32>("h3319") @[MidiProc.scala 44:28]
    freqTable[49] <= UInt<32>("h3623") @[MidiProc.scala 44:28]
    freqTable[50] <= UInt<32>("h395b") @[MidiProc.scala 44:28]
    freqTable[51] <= UInt<32>("h3cc4") @[MidiProc.scala 44:28]
    freqTable[52] <= UInt<32>("h4061") @[MidiProc.scala 44:28]
    freqTable[53] <= UInt<32>("h4435") @[MidiProc.scala 44:28]
    freqTable[54] <= UInt<32>("h4844") @[MidiProc.scala 44:28]
    freqTable[55] <= UInt<32>("h4c90") @[MidiProc.scala 44:28]
    freqTable[56] <= UInt<32>("h511d") @[MidiProc.scala 44:28]
    freqTable[57] <= UInt<32>("h55f0") @[MidiProc.scala 44:28]
    freqTable[58] <= UInt<32>("h5b0c") @[MidiProc.scala 44:28]
    freqTable[59] <= UInt<32>("h6076") @[MidiProc.scala 44:28]
    freqTable[60] <= UInt<32>("h6633") @[MidiProc.scala 44:28]
    freqTable[61] <= UInt<32>("h6c46") @[MidiProc.scala 44:28]
    freqTable[62] <= UInt<32>("h72b6") @[MidiProc.scala 44:28]
    freqTable[63] <= UInt<32>("h7989") @[MidiProc.scala 44:28]
    freqTable[64] <= UInt<32>("h80c3") @[MidiProc.scala 44:28]
    freqTable[65] <= UInt<32>("h886b") @[MidiProc.scala 44:28]
    freqTable[66] <= UInt<32>("h9087") @[MidiProc.scala 44:28]
    freqTable[67] <= UInt<32>("h9920") @[MidiProc.scala 44:28]
    freqTable[68] <= UInt<32>("ha23a") @[MidiProc.scala 44:28]
    freqTable[69] <= UInt<32>("habe0") @[MidiProc.scala 44:28]
    freqTable[70] <= UInt<32>("hb618") @[MidiProc.scala 44:28]
    freqTable[71] <= UInt<32>("hc0ec") @[MidiProc.scala 44:28]
    freqTable[72] <= UInt<32>("hcc65") @[MidiProc.scala 44:28]
    freqTable[73] <= UInt<32>("hd88d") @[MidiProc.scala 44:28]
    freqTable[74] <= UInt<32>("he56d") @[MidiProc.scala 44:28]
    freqTable[75] <= UInt<32>("hf311") @[MidiProc.scala 44:28]
    freqTable[76] <= UInt<32>("h10186") @[MidiProc.scala 44:28]
    freqTable[77] <= UInt<32>("h110d6") @[MidiProc.scala 44:28]
    freqTable[78] <= UInt<32>("h1210f") @[MidiProc.scala 44:28]
    freqTable[79] <= UInt<32>("h1323f") @[MidiProc.scala 44:28]
    freqTable[80] <= UInt<32>("h14475") @[MidiProc.scala 44:28]
    freqTable[81] <= UInt<32>("h157c0") @[MidiProc.scala 44:28]
    freqTable[82] <= UInt<32>("h16c31") @[MidiProc.scala 44:28]
    freqTable[83] <= UInt<32>("h181d9") @[MidiProc.scala 44:28]
    freqTable[84] <= UInt<32>("h198ca") @[MidiProc.scala 44:28]
    freqTable[85] <= UInt<32>("h1b119") @[MidiProc.scala 44:28]
    freqTable[86] <= UInt<32>("h1cada") @[MidiProc.scala 44:28]
    freqTable[87] <= UInt<32>("h1e623") @[MidiProc.scala 44:28]
    freqTable[88] <= UInt<32>("h2030b") @[MidiProc.scala 44:28]
    freqTable[89] <= UInt<32>("h221ab") @[MidiProc.scala 44:28]
    freqTable[90] <= UInt<32>("h2421e") @[MidiProc.scala 44:28]
    freqTable[91] <= UInt<32>("h2647e") @[MidiProc.scala 44:28]
    freqTable[92] <= UInt<32>("h288ea") @[MidiProc.scala 44:28]
    freqTable[93] <= UInt<32>("h2af80") @[MidiProc.scala 44:28]
    freqTable[94] <= UInt<32>("h2d862") @[MidiProc.scala 44:28]
    freqTable[95] <= UInt<32>("h303b1") @[MidiProc.scala 44:28]
    freqTable[96] <= UInt<32>("h33194") @[MidiProc.scala 44:28]
    freqTable[97] <= UInt<32>("h36232") @[MidiProc.scala 44:28]
    freqTable[98] <= UInt<32>("h395b4") @[MidiProc.scala 44:28]
    freqTable[99] <= UInt<32>("h3cc46") @[MidiProc.scala 44:28]
    freqTable[100] <= UInt<32>("h40616") @[MidiProc.scala 44:28]
    freqTable[101] <= UInt<32>("h44357") @[MidiProc.scala 44:28]
    freqTable[102] <= UInt<32>("h4843c") @[MidiProc.scala 44:28]
    freqTable[103] <= UInt<32>("h4c8fc") @[MidiProc.scala 44:28]
    freqTable[104] <= UInt<32>("h511d4") @[MidiProc.scala 44:28]
    freqTable[105] <= UInt<32>("h55f00") @[MidiProc.scala 44:28]
    freqTable[106] <= UInt<32>("h5b0c3") @[MidiProc.scala 44:28]
    freqTable[107] <= UInt<32>("h60763") @[MidiProc.scala 44:28]
    freqTable[108] <= UInt<32>("h66329") @[MidiProc.scala 44:28]
    freqTable[109] <= UInt<32>("h6c464") @[MidiProc.scala 44:28]
    freqTable[110] <= UInt<32>("h72b68") @[MidiProc.scala 44:28]
    freqTable[111] <= UInt<32>("h7988b") @[MidiProc.scala 44:28]
    freqTable[112] <= UInt<32>("h80c2c") @[MidiProc.scala 44:28]
    freqTable[113] <= UInt<32>("h886ad") @[MidiProc.scala 44:28]
    freqTable[114] <= UInt<32>("h90877") @[MidiProc.scala 44:28]
    freqTable[115] <= UInt<32>("h991f9") @[MidiProc.scala 44:28]
    freqTable[116] <= UInt<32>("ha23a8") @[MidiProc.scala 44:28]
    freqTable[117] <= UInt<32>("habe00") @[MidiProc.scala 44:28]
    freqTable[118] <= UInt<32>("hb6186") @[MidiProc.scala 44:28]
    freqTable[119] <= UInt<32>("hc0ec5") @[MidiProc.scala 44:28]
    freqTable[120] <= UInt<32>("hcc652") @[MidiProc.scala 44:28]
    freqTable[121] <= UInt<32>("hd88c8") @[MidiProc.scala 44:28]
    freqTable[122] <= UInt<32>("he56cf") @[MidiProc.scala 44:28]
    freqTable[123] <= UInt<32>("hf3116") @[MidiProc.scala 44:28]
    freqTable[124] <= UInt<32>("h101858") @[MidiProc.scala 44:28]
    freqTable[125] <= UInt<32>("h110d5a") @[MidiProc.scala 44:28]
    freqTable[126] <= UInt<32>("h1210ee") @[MidiProc.scala 44:28]
    freqTable[127] <= UInt<32>("h1323f1") @[MidiProc.scala 44:28]
    io.freq <= freqTable[note] @[MidiProc.scala 50:13]
    node _T = eq(UInt<2>("h0"), state) @[MidiProc.scala 55:19]
    when _T : @[MidiProc.scala 55:19]
      when byte_ok : @[MidiProc.scala 57:27]
        byte_r <= uart_r.io.o_data @[MidiProc.scala 58:24]
        state <= UInt<2>("h1") @[MidiProc.scala 59:23]
        sbyte <= byte_r @[MidiProc.scala 60:23]
    else :
      node _T_1 = eq(UInt<2>("h1"), state) @[MidiProc.scala 55:19]
      when _T_1 : @[MidiProc.scala 55:19]
        when byte_ok : @[MidiProc.scala 64:27]
          byte_r <= uart_r.io.o_data @[MidiProc.scala 65:24]
          node _T_2 = eq(UInt<4>("h9"), sbyte) @[MidiProc.scala 66:31]
          when _T_2 : @[MidiProc.scala 66:31]
            note <= byte_r @[MidiProc.scala 68:30]
            state <= UInt<2>("h2") @[MidiProc.scala 69:31]
      else :
        node _T_3 = eq(UInt<2>("h2"), state) @[MidiProc.scala 55:19]
        when _T_3 : @[MidiProc.scala 55:19]
          when byte_ok : @[MidiProc.scala 75:27]
            byte_r <= uart_r.io.o_data @[MidiProc.scala 76:24]
            node _T_4 = eq(UInt<4>("h9"), sbyte) @[MidiProc.scala 77:31]
            when _T_4 : @[MidiProc.scala 77:31]
              velocity <= byte_r @[MidiProc.scala 79:34]
              state <= UInt<2>("h0") @[MidiProc.scala 83:31]

